// wrapSLIC.h
// This file is generated by Shroud 0.13.0. Do not edit.
//
// Copyright (c) 2017-2024, Lawrence Livermore National Security, LLC and
// other Axom Project Developers. See the top-level LICENSE file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
/**
 * \file wrapSLIC.h
 * \brief Shroud generated wrapper for slic namespace
 */
// For C users and C++ implementation

#ifndef WRAPSLIC_H
#define WRAPSLIC_H

#ifndef __cplusplus
  #include <stdbool.h>
#endif
#include "typesSLIC.h"

// splicer begin CXX_declarations
// splicer end CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

//  axom::slic::message::Level
enum SLIC_message_Level
{
  SLIC_message_Error,
  SLIC_message_Warning,
  SLIC_message_Info,
  SLIC_message_Debug,
  SLIC_message_Num_Levels
};

// splicer begin C_declarations
// splicer end C_declarations

void SLIC_initialize(void);

bool SLIC_isInitialized(void);

void SLIC_createLogger(const char *name, char imask);

void SLIC_createLogger_bufferify(char *name, int SHT_name_len, char imask);

bool SLIC_activateLogger(const char *name);

bool SLIC_activateLogger_bufferify(char *name, int SHT_name_len);

void SLIC_getActiveLoggerName_bufferify(char *name, int SHT_name_len);

int SLIC_getLoggingMsgLevel(void);

void SLIC_setLoggingMsgLevel(int level);

void SLIC_addStreamToMsgLevel(SLIC_GenericOutputStream *ls, int level);

void SLIC_addStreamToAllMsgLevels(SLIC_GenericOutputStream *ls);

void SLIC_setAbortOnError(bool status);

void SLIC_enableAbortOnError(void);

void SLIC_disableAbortOnError(void);

bool SLIC_isAbortOnErrorsEnabled(void);

void SLIC_setAbortOnWarning(bool status);

void SLIC_enableAbortOnWarning(void);

void SLIC_disableAbortOnWarning(void);

bool SLIC_isAbortOnWarningsEnabled(void);

void SLIC_logMessage_file_line(int level,
                               const char *message,
                               const char *fileName,
                               int line);

void SLIC_logMessage_file_line_bufferify(int level,
                                         char *message,
                                         int SHT_message_len,
                                         char *fileName,
                                         int SHT_fileName_len,
                                         int line);

void SLIC_logMessage_file_line_filter(int level,
                                      const char *message,
                                      const char *fileName,
                                      int line,
                                      bool filter_duplicates);

void SLIC_logMessage_file_line_filter_bufferify(int level,
                                                char *message,
                                                int SHT_message_len,
                                                char *fileName,
                                                int SHT_fileName_len,
                                                int line,
                                                bool filter_duplicates);

void SLIC_logMessage(int level, const char *message);

void SLIC_logMessage_bufferify(int level, char *message, int SHT_message_len);

void SLIC_logMessage_filter(int level, const char *message, bool filter_duplicates);

void SLIC_logMessage_filter_bufferify(int level,
                                      char *message,
                                      int SHT_message_len,
                                      bool filter_duplicates);

void SLIC_flushStreams(void);

void SLIC_finalize(void);

#ifdef __cplusplus
}
#endif

#endif  // WRAPSLIC_H
