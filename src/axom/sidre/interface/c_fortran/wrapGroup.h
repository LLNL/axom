// wrapGroup.h
// This file is generated by Shroud 0.13.0. Do not edit.
//
// Copyright (c) 2017-2024, Lawrence Livermore National Security, LLC and
// other Axom Project Developers. See the top-level LICENSE file for details.
//
// SPDX-License-Identifier: (BSD-3-Clause)
/**
 * \file wrapGroup.h
 * \brief Shroud generated wrapper for Group class
 */
// For C users and C++ implementation

#ifndef WRAPGROUP_H
#define WRAPGROUP_H

#include "wrapSidre.h"
#include "axom/sidre/interface/SidreTypes.h"
#ifdef __cplusplus
  #include <cstddef>
  #include <cstdint>
  #include "axom/sidre/core/SidreTypes.hpp"
#else
  #include <stddef.h>
  #include <stdbool.h>
  #include <stdint.h>
#endif
#include "typesSidre.h"

// splicer begin class.Group.CXX_declarations
// splicer end class.Group.CXX_declarations

#ifdef __cplusplus
extern "C" {
#endif

// splicer begin class.Group.C_declarations
// splicer end class.Group.C_declarations

SIDRE_IndexType SIDRE_Group_get_index(SIDRE_Group *self);

const char *SIDRE_Group_get_name(const SIDRE_Group *self);

void SIDRE_Group_get_name_bufferify(const SIDRE_Group *self,
                                    char *SHC_rv,
                                    int SHT_rv_len);

void SIDRE_Group_get_path_bufferify(const SIDRE_Group *self,
                                    char *SHC_rv,
                                    int SHT_rv_len);

void SIDRE_Group_get_path_name_bufferify(const SIDRE_Group *self,
                                         char *SHC_rv,
                                         int SHT_rv_len);

SIDRE_Group *SIDRE_Group_get_parent(const SIDRE_Group *self, SIDRE_Group *SHC_rv);

size_t SIDRE_Group_get_num_groups(const SIDRE_Group *self);

size_t SIDRE_Group_get_num_views(const SIDRE_Group *self);

SIDRE_DataStore *SIDRE_Group_get_data_store(const SIDRE_Group *self,
                                            SIDRE_DataStore *SHC_rv);

bool SIDRE_Group_has_view(const SIDRE_Group *self, const char *path);

bool SIDRE_Group_has_view_bufferify(const SIDRE_Group *self,
                                    char *path,
                                    int SHT_path_len);

bool SIDRE_Group_has_child_view(const SIDRE_Group *self, const char *name);

bool SIDRE_Group_has_child_view_bufferify(const SIDRE_Group *self,
                                          char *name,
                                          int SHT_name_len);

SIDRE_IndexType SIDRE_Group_get_view_index(const SIDRE_Group *self,
                                           const char *name);

SIDRE_IndexType SIDRE_Group_get_view_index_bufferify(const SIDRE_Group *self,
                                                     char *name,
                                                     int SHT_name_len);

const char *SIDRE_Group_get_view_name(const SIDRE_Group *self,
                                      SIDRE_IndexType idx);

void SIDRE_Group_get_view_name_int32_t_bufferify(const SIDRE_Group *self,
                                                 int32_t idx,
                                                 char *SHC_rv,
                                                 int SHT_rv_len);

void SIDRE_Group_get_view_name_int64_t_bufferify(const SIDRE_Group *self,
                                                 int64_t idx,
                                                 char *SHC_rv,
                                                 int SHT_rv_len);

SIDRE_View *SIDRE_Group_get_view_from_name(SIDRE_Group *self,
                                           const char *path,
                                           SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_get_view_from_name_bufferify(SIDRE_Group *self,
                                                     char *path,
                                                     int SHT_path_len,
                                                     SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_get_view_from_index(SIDRE_Group *self,
                                            const SIDRE_IndexType idx,
                                            SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_get_view_from_index_int32_t(SIDRE_Group *self,
                                                    int32_t idx,
                                                    SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_get_view_from_index_int64_t(SIDRE_Group *self,
                                                    int64_t idx,
                                                    SIDRE_View *SHC_rv);

SIDRE_IndexType SIDRE_Group_get_first_valid_view_index(const SIDRE_Group *self);

SIDRE_IndexType SIDRE_Group_get_next_valid_view_index(const SIDRE_Group *self,
                                                      SIDRE_IndexType idx);

SIDRE_View *SIDRE_Group_create_view_empty(SIDRE_Group *self,
                                          const char *path,
                                          SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_empty_bufferify(SIDRE_Group *self,
                                                    char *path,
                                                    int SHT_path_len,
                                                    SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type(SIDRE_Group *self,
                                              const char *path,
                                              SIDRE_TypeID type,
                                              SIDRE_IndexType num_elems,
                                              SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_int32_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int32_t num_elems,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_int64_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int64_t num_elems,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_base(SIDRE_Group *self,
                                                    const char *path,
                                                    SIDRE_TypeID type,
                                                    int ndims,
                                                    const SIDRE_IndexType *shape,
                                                    SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_base_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int ndims,
  const SIDRE_IndexType *shape,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_into_buffer(SIDRE_Group *self,
                                                const char *path,
                                                SIDRE_Buffer *buff,
                                                SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_into_buffer_bufferify(SIDRE_Group *self,
                                                          char *path,
                                                          int SHT_path_len,
                                                          SIDRE_Buffer *buff,
                                                          SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_and_buffer(SIDRE_Group *self,
                                                         const char *path,
                                                         SIDRE_TypeID type,
                                                         SIDRE_IndexType num_elems,
                                                         SIDRE_Buffer *buff,
                                                         SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_and_buffer_int32_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int32_t num_elems,
  SIDRE_Buffer *buff,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_and_buffer_int64_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int64_t num_elems,
  SIDRE_Buffer *buff,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_and_buffer(SIDRE_Group *self,
                                                          const char *path,
                                                          SIDRE_TypeID type,
                                                          int ndims,
                                                          const SIDRE_IndexType *shape,
                                                          SIDRE_Buffer *buff,
                                                          SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_and_buffer_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int ndims,
  const SIDRE_IndexType *shape,
  SIDRE_Buffer *buff,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_external(SIDRE_Group *self,
                                             const char *path,
                                             void *external_ptr,
                                             SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_external_bufferify(SIDRE_Group *self,
                                                       char *path,
                                                       int SHT_path_len,
                                                       void *external_ptr,
                                                       SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_external(SIDRE_Group *self,
                                                       const char *path,
                                                       SIDRE_TypeID type,
                                                       SIDRE_IndexType num_elems,
                                                       void *external_ptr,
                                                       SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_external_int32_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int32_t num_elems,
  void *external_ptr,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_from_type_external_int64_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int64_t num_elems,
  void *external_ptr,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_external(SIDRE_Group *self,
                                                        const char *path,
                                                        SIDRE_TypeID type,
                                                        int ndims,
                                                        const SIDRE_IndexType *shape,
                                                        void *external_ptr,
                                                        SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_external_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int ndims,
  const SIDRE_IndexType *shape,
  void *external_ptr,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_and_allocate_nelems(SIDRE_Group *self,
                                                        const char *path,
                                                        SIDRE_TypeID type,
                                                        SIDRE_IndexType num_elems,
                                                        SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_and_allocate_nelems_int32_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int32_t num_elems,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_and_allocate_nelems_int64_t_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int64_t num_elems,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_and_allocate(
  SIDRE_Group *self,
  const char *path,
  SIDRE_TypeID type,
  int ndims,
  const SIDRE_IndexType *shape,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_with_shape_and_allocate_bufferify(
  SIDRE_Group *self,
  char *path,
  int SHT_path_len,
  SIDRE_TypeID type,
  int ndims,
  const SIDRE_IndexType *shape,
  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_int(SIDRE_Group *self,
                                               const char *path,
                                               int value,
                                               SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_bufferify_int(SIDRE_Group *self,
                                                         char *path,
                                                         int SHT_path_len,
                                                         int value,
                                                         SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_long(SIDRE_Group *self,
                                                const char *path,
                                                long value,
                                                SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_bufferify_long(SIDRE_Group *self,
                                                          char *path,
                                                          int SHT_path_len,
                                                          long value,
                                                          SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_float(SIDRE_Group *self,
                                                 const char *path,
                                                 float value,
                                                 SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_bufferify_float(SIDRE_Group *self,
                                                           char *path,
                                                           int SHT_path_len,
                                                           float value,
                                                           SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_double(SIDRE_Group *self,
                                                  const char *path,
                                                  double value,
                                                  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_scalar_bufferify_double(SIDRE_Group *self,
                                                            char *path,
                                                            int SHT_path_len,
                                                            double value,
                                                            SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_string(SIDRE_Group *self,
                                           const char *path,
                                           const char *value,
                                           SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_create_view_string_bufferify(SIDRE_Group *self,
                                                     char *path,
                                                     int SHT_path_len,
                                                     char *value,
                                                     int SHT_value_len,
                                                     SIDRE_View *SHC_rv);

void SIDRE_Group_destroy_view(SIDRE_Group *self, const char *path);

void SIDRE_Group_destroy_view_bufferify(SIDRE_Group *self,
                                        char *path,
                                        int SHT_path_len);

void SIDRE_Group_destroy_view_and_data_name(SIDRE_Group *self, const char *path);

void SIDRE_Group_destroy_view_and_data_name_bufferify(SIDRE_Group *self,
                                                      char *path,
                                                      int SHT_path_len);

void SIDRE_Group_destroy_view_and_data_index(SIDRE_Group *self,
                                             SIDRE_IndexType idx);

SIDRE_View *SIDRE_Group_move_view(SIDRE_Group *self,
                                  SIDRE_View *view,
                                  SIDRE_View *SHC_rv);

SIDRE_View *SIDRE_Group_copy_view(SIDRE_Group *self,
                                  SIDRE_View *view,
                                  SIDRE_View *SHC_rv);

bool SIDRE_Group_has_group(SIDRE_Group *self, const char *path);

bool SIDRE_Group_has_group_bufferify(SIDRE_Group *self,
                                     char *path,
                                     int SHT_path_len);

bool SIDRE_Group_has_child_group(SIDRE_Group *self, const char *name);

bool SIDRE_Group_has_child_group_bufferify(SIDRE_Group *self,
                                           char *name,
                                           int SHT_name_len);

SIDRE_IndexType SIDRE_Group_get_group_index(const SIDRE_Group *self,
                                            const char *name);

SIDRE_IndexType SIDRE_Group_get_group_index_bufferify(const SIDRE_Group *self,
                                                      char *name,
                                                      int SHT_name_len);

const char *SIDRE_Group_get_group_name(const SIDRE_Group *self,
                                       SIDRE_IndexType idx);

void SIDRE_Group_get_group_name_int32_t_bufferify(const SIDRE_Group *self,
                                                  int32_t idx,
                                                  char *SHC_rv,
                                                  int SHT_rv_len);

void SIDRE_Group_get_group_name_int64_t_bufferify(const SIDRE_Group *self,
                                                  int64_t idx,
                                                  char *SHC_rv,
                                                  int SHT_rv_len);

SIDRE_Group *SIDRE_Group_get_group_from_name(SIDRE_Group *self,
                                             const char *path,
                                             SIDRE_Group *SHC_rv);

SIDRE_Group *SIDRE_Group_get_group_from_name_bufferify(SIDRE_Group *self,
                                                       char *path,
                                                       int SHT_path_len,
                                                       SIDRE_Group *SHC_rv);

SIDRE_Group *SIDRE_Group_get_group_from_index(SIDRE_Group *self,
                                              SIDRE_IndexType idx,
                                              SIDRE_Group *SHC_rv);

SIDRE_Group *SIDRE_Group_get_group_from_index_int32_t(SIDRE_Group *self,
                                                      int32_t idx,
                                                      SIDRE_Group *SHC_rv);

SIDRE_Group *SIDRE_Group_get_group_from_index_int64_t(SIDRE_Group *self,
                                                      int64_t idx,
                                                      SIDRE_Group *SHC_rv);

SIDRE_IndexType SIDRE_Group_get_first_valid_group_index(const SIDRE_Group *self);

SIDRE_IndexType SIDRE_Group_get_next_valid_group_index(const SIDRE_Group *self,
                                                       SIDRE_IndexType idx);

SIDRE_Group *SIDRE_Group_create_group(SIDRE_Group *self,
                                      const char *path,
                                      SIDRE_Group *SHC_rv);

SIDRE_Group *SIDRE_Group_create_group_bufferify(SIDRE_Group *self,
                                                char *path,
                                                int SHT_path_len,
                                                SIDRE_Group *SHC_rv);

void SIDRE_Group_destroy_group_name(SIDRE_Group *self, const char *path);

void SIDRE_Group_destroy_group_name_bufferify(SIDRE_Group *self,
                                              char *path,
                                              int SHT_path_len);

void SIDRE_Group_destroy_group_index(SIDRE_Group *self, SIDRE_IndexType idx);

SIDRE_Group *SIDRE_Group_move_group(SIDRE_Group *self,
                                    SIDRE_Group *grp,
                                    SIDRE_Group *SHC_rv);

void SIDRE_Group_print(const SIDRE_Group *self);

bool SIDRE_Group_is_equivalent_to(const SIDRE_Group *self, SIDRE_Group *other);

void SIDRE_Group_save(const SIDRE_Group *self,
                      const char *file_path,
                      const char *protocol);

void SIDRE_Group_save_bufferify(const SIDRE_Group *self,
                                char *file_path,
                                int SHT_file_path_len,
                                char *protocol,
                                int SHT_protocol_len);

void SIDRE_Group_load_0(SIDRE_Group *self,
                        const char *file_path,
                        const char *protocol);

void SIDRE_Group_load_0_bufferify(SIDRE_Group *self,
                                  char *file_path,
                                  int SHT_file_path_len,
                                  char *protocol,
                                  int SHT_protocol_len);

void SIDRE_Group_load_1(SIDRE_Group *self,
                        const char *file_path,
                        const char *protocol,
                        bool preserve_contents);

void SIDRE_Group_load_1_bufferify(SIDRE_Group *self,
                                  char *file_path,
                                  int SHT_file_path_len,
                                  char *protocol,
                                  int SHT_protocol_len,
                                  bool preserve_contents);

void SIDRE_Group_load_external_data(SIDRE_Group *self, const char *file_path);

void SIDRE_Group_load_external_data_bufferify(SIDRE_Group *self,
                                              char *file_path,
                                              int SHT_file_path_len);

bool SIDRE_Group_rename(SIDRE_Group *self, const char *new_name);

bool SIDRE_Group_rename_bufferify(SIDRE_Group *self,
                                  char *new_name,
                                  int SHT_new_name_len);

#ifdef __cplusplus
}
#endif

#endif  // WRAPGROUP_H
