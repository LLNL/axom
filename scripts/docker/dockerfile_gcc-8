# This script can be run with the following command:
# docker build --build-arg branch=<your branch here, defaults to develop> -t "axom/tpls:gcc-8" - < dockerfile_gcc-8

FROM axom/compilers:gcc-8
ARG branch=develop

# Update base image so we don't have to install so many things via Spack
SHELL ["/bin/bash", "-c"]
RUN sudo apt-get update -y
RUN sudo apt-get install curl wget ssh pkg-config build-essential libopenblas-dev tar lcov xsltproc python3 -fy
RUN sudo apt-get -qq install -y --no-install-recommends gfortran-7 && sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-7 100
RUN sudo ln -f -s python3 /usr/bin/python # Compatibility with legacy Python

WORKDIR "/home/axom"
USER axom

# Avoid building CMake from scratch
RUN wget https://cmake.org/files/v3.18/cmake-3.18.5-Linux-x86_64.sh
RUN sudo sh cmake-3.18.5-Linux-x86_64.sh --prefix=/usr --exclude-subdir

# Avoid building all MPICH3.3 dependencies from scratch - is there a xenial-compatible binary somewhere?
RUN wget http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz && tar xfz mpich-3.3.2.tar.gz
RUN cd mpich-3.3.2 && ./configure -prefix=/usr && make -j && sudo make install

# Clone axom
RUN git clone --recursive --branch $branch --single-branch --depth 1 https://github.com/LLNL/axom.git

# Build TPLs
WORKDIR "/home/axom/axom"
RUN python3 ./scripts/uberenv/uberenv.py --spack-config-dir=./scripts/spack/configs/docker/ubuntu16 \
                                         --spec=%gcc@8.1.0+mfem --prefix=/home/axom/axom_tpls -k

# Make sure the new hostconfig worked
RUN python3 config-build.py -hc *.cmake -bp build -DBLT_CXX_STD=c++14 -DBUILD_SHARED_LIBS=ON && \
    cd build && make -j8 VERBOSE=1 && \
    make CTEST_OUTPUT_ON_FAILURE=1 test ARGS="-T Test -VV -j8"

# Copy host-config into easy location to copy out
RUN mkdir -p /home/axom/export_hostconfig
RUN cp ./*.cmake /home/axom/export_hostconfig

# Clean up repository that will be cloned each CI job
WORKDIR "/home/axom"
RUN rm -rf axom
RUN rm -rf axom_tpls/builds

