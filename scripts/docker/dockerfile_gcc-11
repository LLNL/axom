# This script can be run with the following command:
# docker build --build-arg branch=<your branch here, defaults to develop> -t "axom/tpls:gcc-11" - < dockerfile_gcc-11

FROM axom/compilers:ubuntu-20-gcc-11_07-10-23_21h-57m
ARG branch=develop

SHELL ["/bin/bash", "-c"]
RUN sudo apt-get update -y
RUN sudo apt-get install doxygen elfutils gfortran graphviz libopenblas-dev libomp-dev mpich python3-sphinx ssh texlive-full -fy

WORKDIR "/home/axom"
USER axom

RUN git clone --recursive --branch $branch --single-branch --depth 1 https://github.com/LLNL/axom.git axom_repo

# Build/install TPLs via spack and then remove the temporary build directory on success
RUN cd axom_repo && python3 ./scripts/uberenv/uberenv.py --spack-env-file=./scripts/spack/configs/docker/ubuntu20/spack.yaml \
                                                         --project-json=.uberenv_config.json \
                                                         --spec=%gcc@11.1.0+mfem+raja+umpire+profiling --prefix=/home/axom/axom_tpls -k \
                 && rm -rf /home/axom/axom_tpls/builds

RUN mkdir -p /home/axom/export_hostconfig
RUN cp ./axom_repo/*.cmake /home/axom/export_hostconfig

# Make sure the new hostconfig worked
# Note: having high job slots causes build log to disappear and job to fail
RUN cd axom_repo && python3 config-build.py -hc *.cmake -bp build && cd build && make -j4 && make -j4 test && cd /home/axom && rm -rf axom_repo
