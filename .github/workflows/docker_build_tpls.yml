<<<<<<< HEAD
# This is a basic workflow that is manually triggered

name: Docker TPL build

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
=======
name: Docker TPL build

# Manually triggered
on:
  workflow_dispatch:
    # No input required

jobs:
  clang-10:
    runs-on: ubuntu-latest
    name: Builds a Clang 10 docker image and extracts generated hostconfigs
    env:
      TAG: clang-10
      REPO: axomllnl/tpls
      HOSTCONFIG_LOC: /home/axom/export_hostconfig
      DOCKERFILE_PREFIX: ./scripts/docker/dockerfile_
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Get dockerfile name
      shell: bash
      run: echo "##[set-output name=filename;]$(echo ${DOCKERFILE_PREFIX}${TAG})"
      id: dockerfile_name
    - name: Get dockerhub repo name
      shell: bash
      run: |
        echo ${REPO}:${TAG}_`date "+%m-%d-%y_%Hh-%Mm"`
        echo "##[set-output name=repo_plus_tag;]$(echo ${REPO}:${TAG}_`date "+%m-%d-%y_%Hh-%Mm"`)"
      id: repo_name

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.repo_name.outputs.repo_plus_tag }}
        file: ${{ steps.dockerfile_name.outputs.filename }}
        context: .
        platforms: linux/amd64
        build-args: branch=${{ steps.extract_branch.outputs.branch }}

    - name: Get hostconfig
      run: |
        echo ${{ steps.docker_build.outputs.digest }}
        docker pull ${{ steps.repo_name.outputs.repo_plus_tag }}
        docker create --name extract_hc ${{ steps.repo_name.outputs.repo_plus_tag }}
        mkdir -p extracted_hc
        docker cp extract_hc:${{ env.HOSTCONFIG_LOC }} ./extracted_hc
        docker rm extract_hc
    
    - name: Upload hostconfig
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.TAG }}_hostconfigs
        path: ./extracted_hc/export_hostconfig/*

  gcc-8:
    runs-on: ubuntu-latest
    name: Builds a GCC 8 docker image and extracts generated hostconfigs
    env:
      TAG: gcc-8
      REPO: axomllnl/tpls
      HOSTCONFIG_LOC: /home/axom/export_hostconfig
      DOCKERFILE_PREFIX: ./scripts/docker/dockerfile_
    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Get dockerfile name
      shell: bash
      run: echo "##[set-output name=filename;]$(echo ${DOCKERFILE_PREFIX}${TAG})"
      id: dockerfile_name
    - name: Get dockerhub repo name
      shell: bash
      run: |
        echo ${REPO}:${TAG}_`date "+%m-%d-%y_%Hh-%Mm"`
        echo "##[set-output name=repo_plus_tag;]$(echo ${REPO}:${TAG}_`date "+%m-%d-%y_%Hh-%Mm"`)"
      id: repo_name

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.repo_name.outputs.repo_plus_tag }}
        file: ${{ steps.dockerfile_name.outputs.filename }}
        context: .
        platforms: linux/amd64
        build-args: branch=${{ steps.extract_branch.outputs.branch }}

    - name: Get hostconfig
      run: |
        echo ${{ steps.docker_build.outputs.digest }}
        docker pull ${{ steps.repo_name.outputs.repo_plus_tag }}
        docker create --name extract_hc ${{ steps.repo_name.outputs.repo_plus_tag }}
        mkdir -p extracted_hc
        docker cp extract_hc:${{ env.HOSTCONFIG_LOC }} ./extracted_hc
        docker rm extract_hc
    
    - name: Upload hostconfig
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.TAG }}_hostconfigs
        path: ./extracted_hc/export_hostconfig/*

>>>>>>> d5a82728d (Initial check-in of github actions from serac. Serac name replaced with axom.)
